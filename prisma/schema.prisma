// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  Electronics
  Literature
  Stationary
  Clothing
  Appliances
}

enum OrderStatus {
  Pending
  Delivered
}

model User {
  id    String  @id @default(cuid())
  name  String
  email String  @unique
  image String?

  customerId String? @unique //Stripe

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart?
  order     Order[]
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String
  price       Int
  stock       Int
  imageUrl    String
  category    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cartItem    CartItem[]
  orderItem   OrderItem[]
}

model Cart {
  id     String     @id @default(cuid())
  userId String     @unique
  user   User       @relation(fields: [userId], references: [id])
  items  CartItem[]
  Order  Order[]
}

model CartItem {
  id        String  @id @default(cuid())
  quantity  Int     @default(1)
  productId String
  product   Product @relation(fields: [productId], references: [id])
  cartId    String
  cart      Cart    @relation(fields: [cartId], references: [id])
}

model Order {
  id         String @id @default(cuid())
  userId     String
  user       User   @relation(fields: [userId], references: [id])
  totalPrice Int

  items             OrderItem[]
  status            OrderStatus
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  shippingAddress   ShippingAddress? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  Cart              Cart?            @relation(fields: [cartId], references: [id])
  cartId            String?
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}
